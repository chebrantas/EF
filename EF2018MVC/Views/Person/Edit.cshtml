@model EF2018MVC.Models.Person

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Person</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SocialSecurityNumber)
    @Html.HiddenFor(model => model.RowVersion)


    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RowVersion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RowVersion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RowVersion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.LabelFor(model => model.Info.Height.Units, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Info.Height.Units, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => model.Info.Height.Reading, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Info.Height.Reading, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => model.Info.Weight.Units, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Info.Weight.Units, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => model.Info.Weight.Reading, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Info.Weight.Reading, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.Info.Height.Units, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
